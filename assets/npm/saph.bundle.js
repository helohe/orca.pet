!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(1);e.Saph=n.Saph},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=r(2);e.Saph=class{constructor(t=16384,e=8){this._memory=16384,this._iterations=8,this.iterations=e,this.memory=t}get memory(){return this._memory}set memory(t){const e=0|t;if(e<0||e!==t)throw new Error("Memory size must be a positive integer");this._memory=e}get iterations(){return this._iterations}set iterations(t){const e=0|t;if(e<0||e!==t)throw new Error("Iterations must be a positive integer");this._iterations=e}async hash(...t){let e=await this._hashParts(t),r=new Uint8Array(64*this._memory);for(let t=0;t<this._iterations;t++){const t=await crypto.subtle.importKey("raw",e.subarray(0,16),"AES-CBC",!1,["encrypt"]),n={name:"AES-CBC",iv:e.subarray(16,32)},o=await crypto.subtle.encrypt(n,t,r),s=new Uint8Array(o),i=[];for(let t=0;t<this._memory;t++)i.push(t);for(let t=0;t<this._memory;t++){let e=s[64*t+0]<<0|s[64*t+1]<<8|s[64*t+2]<<16|s[64*t+3]<<24;e>>>=0,e%=this._memory;const r=i[t];i[t]=i[e],i[e]=r}for(let t=0;t<this._memory;t++){const e=64*t,n=64*i[t];r.set(s.subarray(n,n+64),e)}const a=await crypto.subtle.digest("SHA-256",r);e=new Uint8Array(a),r=s.subarray(0,64*this._memory)}return new n.SaphHash(e)}async _hashParts(t){const e=new Uint8Array(32*t.length),r=new TextEncoder;for(let n=0;n<t.length;n++){let o=t[n];("string"==typeof o||o instanceof String)&&(o=r.encode(o));const s=await crypto.subtle.digest("SHA-256",o),i=new Uint8Array(s);e.set(i,32*n)}const n=await crypto.subtle.digest("SHA-256",e);return new Uint8Array(n)}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.SaphHash=class{constructor(t){this.bytes=t}toHex(t=!1){let e="0123456789abcdef";t&&(e="0123456789ABCDEF");let r="";for(const t of this.bytes)r+=e[t>>4],r+=e[15&t];return r}toBase64(){return btoa(String.fromCharCode.apply(null,this.bytes))}}}]);